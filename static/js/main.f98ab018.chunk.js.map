{"version":3,"sources":["logo.svg","axios.js","Services/Auth.js","Services/dlog.service.js","Components/AddLog/AddLog.js","Components/Learnings/Learnings.js","Components/Pomodoro/Pomodoro.js","Components/VIewLog/ViewLog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","createTokenProvider","data","JSON","parse","localStorage","getItem","_token","getExpirationDate","jwtToken","jwt","atob","split","exp","getToken","a","accessToken","Date","now","post","refreshToken","tokens","setToken","isLoggedIn","observers","token","setItem","stringify","removeItem","isLogged","forEach","observer","notify","subscribe","push","unsubscribe","filter","_observer","tokenProvider","useAuth","useState","setIsLogged","useEffect","listener","newIsLogged","authPost","url","input","headers","authGet","console","log","get","authDelete","delete","authPatch","patch","login","newTokens","logout","createAuthProvider","DlogService","getDlogs","res","addDLog","task","item","removeDlog","id","updateDlog","getLearnings","addLearnings","learning","from","incident","removeLearnings","updateLearnings","getLearningsById","confirmUser","email","password","status","registerUser","name","logOut","AddLog","props","currentDlogs","setCurrentDlogs","refreshSpin","setRefreshSpin","existingLogs","currLog","setCurrLog","refresh","newDlogs","addLog","handleRemove","suffix","EnterOutlined","style","fontSize","color","InputItem","IsEditable","setIsEditable","logText","setLogText","handleKeyPress","target","keyCode","_id","Item","actions","width","cursor","display","onClick","onKeyDown","ArrowRightOutlined","value","onChange","e","className","allowClear","placeholder","SyncOutlined","spin","position","right","flaot","orientation","bordered","height","maxHeight","overflowY","dataSource","renderItem","LearningLoader","Form","useForm","form","exists","setFieldsValue","handleOk","setmodal","addLearning","getFieldsValue","resetFields","layout","labelAlign","labelCol","span","wrapperCol","colon","title","visible","onOk","onCancel","okText","onFinish","values","label","rules","required","htmlType","type","Learnings","existingLearnings","modaledit","setmodaledit","modal","float","marginBottom","icon","PlusOutlined","Pomodoro","ViewLog","Header","Layout","Content","Footer","Sider","DailyQuote","temp","Quote","getQuote","text","length","quote","setQuote","author","quoteAuth","setQuoteAuth","timer","setInterval","clearInterval","Login","tailLayout","offset","setLogin","initialValues","remember","onFinishFailed","errorInfo","message","Password","valuePropName","to","Register","LoginComp","isLogin","setIsLogin","LoggedInContent","setResponse","setRes","learnres","learnsetRes","socketIOClient","on","App","logged","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f98ab018.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL: 'https://dlogservice.herokuapp.com/'\r\n});\r\nexport default instance;","import { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\n\r\nconst createTokenProvider = () => {\r\n  let data = JSON.parse(localStorage.getItem(\"REACT_TOKEN_AUTH\")) || null;\r\n  let _token = data?data.data: null\r\n  const getExpirationDate = (jwtToken) => {\r\n    if (!jwtToken) {\r\n      return null;\r\n    }\r\n\r\n    const jwt = JSON.parse(atob(jwtToken.split(\".\")[1]));\r\n\r\n    // multiply by 1000 to convert seconds into milliseconds\r\n    return (jwt && jwt.exp && jwt.exp * 1000) || null;\r\n  };\r\n\r\n  const isExpired = (exp) => {\r\n    if (!exp) {\r\n      return false;\r\n    }\r\n\r\n    return Date.now() > exp;\r\n  };\r\n\r\n  const getToken = async () => {\r\n    if (!_token) {\r\n      return null;\r\n    }\r\n\r\n    if (isExpired(getExpirationDate(_token.accessToken))) {\r\n      const tokens = await axios.post(\"/auth/refresh-token\", {\r\n        refreshToken: _token.refreshToken,\r\n      });\r\n\r\n      setToken(tokens);\r\n    }\r\n\r\n    return _token && _token.accessToken;\r\n  };\r\n  const isLoggedIn = () => {\r\n    // console.log(\"Token:\",_token)\r\n    return !!_token;\r\n  };\r\n  let observers = [];\r\n  const subscribe = (observer) => {\r\n    observers.push(observer);\r\n  };\r\n\r\n  const unsubscribe = (observer) => {\r\n    observers = observers.filter((_observer) => _observer !== observer);\r\n  };\r\n  const notify = () => {\r\n    const isLogged = isLoggedIn();\r\n    observers.forEach((observer) => observer(isLogged));\r\n  };\r\n  const setToken = (token) => {\r\n    if (token) {\r\n      localStorage.setItem(\"REACT_TOKEN_AUTH\", JSON.stringify(token));\r\n    } else {\r\n      localStorage.removeItem(\"REACT_TOKEN_AUTH\");\r\n    }\r\n    _token = token;\r\n    notify();\r\n  };\r\n  return {\r\n    getToken,\r\n    isLoggedIn,\r\n    setToken,\r\n    subscribe,\r\n    unsubscribe,\r\n  };\r\n};\r\n\r\nexport const createAuthProvider = () => {\r\n  const tokenProvider = createTokenProvider();\r\n  const login = (newTokens) => {\r\n    tokenProvider.setToken(newTokens);\r\n  };\r\n\r\n  const logout = () => {\r\n    tokenProvider.setToken(null);\r\n  };\r\n\r\n  const authPost = async (url, input) => {\r\n    const token = await tokenProvider.getToken();\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n\r\n    return axios.post(url, input,{headers});\r\n  };\r\n\r\n  const authGet = async (url) => {\r\n    const token = await tokenProvider.getToken();\r\n    console.log(\"Getting:\"+url)\r\n    // console.log(\"token:\",token)\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n\r\n    return axios.get(url, {headers});\r\n  };\r\n  const authDelete = async (url) => {\r\n    const token = await tokenProvider.getToken();\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n\r\n    return axios.delete(url, {headers});\r\n  };\r\n  const authPatch = async (url, input) => {\r\n    const token = await tokenProvider.getToken();\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n\r\n    return axios.patch(url, input,{headers});\r\n  };\r\n\r\n  const useAuth = () => {\r\n    const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\r\n\r\n    useEffect(() => {\r\n      const listener = (newIsLogged) => {\r\n        setIsLogged(newIsLogged);\r\n      };\r\n\r\n      tokenProvider.subscribe(listener);\r\n      return () => {\r\n        tokenProvider.unsubscribe(listener);\r\n      };\r\n    }, []);\r\n\r\n    return [isLogged];\r\n  };\r\n\r\n  return {\r\n    useAuth,\r\n    authPost,\r\n    authGet,\r\n    authDelete,\r\n    authPatch,\r\n    login,\r\n    logout,\r\n  }\r\n}","import axios from \"../axios\";\r\nimport { createAuthProvider } from \"./Auth\";\r\n\r\nexport const {useAuth, authPost, authGet,authDelete,authPatch, login, logout} = createAuthProvider();\r\n\r\nexport const DlogService = {\r\n  getDlogs: async () => {\r\n    console.log(\"Getting logs\")\r\n    const res = await authGet(\"/dlogs\");\r\n    return res.data;\r\n  },\r\n  addDLog: async (task) => {\r\n    const item = await authPost(\"/dlogs/addDlog\", { task: task });\r\n    return item.data;\r\n  },\r\n\r\n  removeDlog: async (id) => {\r\n    await authDelete(\"/dlogs/\" + id);\r\n  },\r\n  updateDlog: async (id, task) => {\r\n    await authPatch(\"/dlogs/\" + id, { task: task });\r\n  },\r\n\r\n  getLearnings: async () => {\r\n    const res = await authPost(\"/learnings\");\r\n    return res.data;\r\n  },\r\n  addLearnings: async (learning, from, incident) => {\r\n    const item = await authPost(\"/learnings/addLearning\", {\r\n      learning,\r\n      from,\r\n      incident,\r\n    });\r\n    return item.data;\r\n  },\r\n\r\n  removeLearnings: async (id) => {\r\n    await authDelete(\"/learnings/\" + id);\r\n  },\r\n  updateLearnings: async (id, learning, from, incident) => {\r\n    await authPatch(\"/learnings/\" + id, {\r\n      learning,\r\n      from,\r\n      incident,\r\n    });\r\n  },\r\n  getLearningsById: async (id)=>{\r\n   const res = await authGet(\"/\"+id)\r\n   return res.data\r\n  },\r\n  confirmUser:async({email,password})=>\r\n  {\r\n    try {\r\n      const res = await axios.post(\"/auth/login\",{\r\n        email,\r\n        password\r\n      })\r\n      console.log(\"object:\",res)\r\n      if(res.status == 200){\r\n        login(res.data)\r\n        return res\r\n      }\r\n        \r\n    } catch (error) {\r\n      \r\n    }\r\n    \r\n    \r\n  },\r\n  registerUser:async({name,email,password})=>\r\n  {\r\n    try {\r\n      const res = await axios.post(\"/auth/register\",{\r\n        name,\r\n        email,\r\n        password\r\n      })\r\n      if(res.status == 200)\r\n        login(res)\r\n      return res\r\n    } catch (error) {\r\n      \r\n    }\r\n    \r\n    \r\n  },\r\n  logOut:async()=>{\r\n    logout()\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { EnterOutlined, ArrowRightOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { List, Typography, Divider } from 'antd';\r\nimport { Input, Tooltip, Button } from 'antd';\r\nimport axios from '../../axios';\r\nimport \"./AddLog.css\"\r\nimport { DlogService } from '../../Services/dlog.service'\r\nfunction AddLog(props) {\r\n    const getLogs = []\r\n    const [currentDlogs, setCurrentDlogs] = useState([])\r\n    const [refreshSpin, setRefreshSpin] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentDlogs(props.existingLogs)\r\n\r\n    }, [props])\r\n    const [currLog, setCurrLog] = useState(\"\")\r\n    const handleKeyPress = (target) => {\r\n        console.log(\"Key pressed\")\r\n        if (target.keyCode === 13) {\r\n            console.log(\"Enter detected\")\r\n            addLog()\r\n        }\r\n    }\r\n\r\n    const refresh = async () => {\r\n        setRefreshSpin(true)\r\n        const newDlogs = await DlogService.getDlogs()\r\n        setCurrentDlogs(newDlogs)\r\n        setRefreshSpin(false)\r\n    }\r\n    const addLog = async () => {\r\n        console.log(\"Adding\")\r\n        const item = await DlogService.addDLog(currLog)\r\n        setCurrentDlogs(currentDlogs => [...currentDlogs, item])\r\n        setCurrLog(\"\")\r\n\r\n    }\r\n\r\n    const handleLogChange = (e) => {\r\n        setCurrLog(e.target.value)\r\n\r\n    }\r\n    const handleRemove = async (id) => {\r\n        // console.log(id)\r\n        await DlogService.removeDlog(id)\r\n        await refresh()\r\n\r\n\r\n    }\r\n    const suffix = (\r\n        <EnterOutlined\r\n            style={{\r\n                fontSize: 16,\r\n                color: '#1890ff',\r\n            }}\r\n        />\r\n    );\r\n    const InputItem = ({item}) => {\r\n        const [IsEditable,setIsEditable] = useState(false)\r\n        const [logText,setLogText] = useState(item.task)\r\n        const handleKeyPress = async (target) => {\r\n            console.log(\"Key pressed\")\r\n            if (target.keyCode === 13) {\r\n                console.log(\"Enter detected\")\r\n                setIsEditable(false); \r\n                await DlogService.updateDlog(item._id,logText);\r\n                await refresh()\r\n            }\r\n        }\r\n       return ( <List.Item \r\n            actions={[<div style={{ color: 'blue',width:\"10%\" ,cursor:\"pointer\" , display: IsEditable ? 'none':'block' }} onClick={()=>{setIsEditable(true)}}>Edit</div>, <div onClick={() => { handleRemove(item._id) }} style={{ color: 'red', width:\"10%\" ,cursor: \"pointer\" }}>Remove</div>]}\r\n        >\r\n            {IsEditable && <Input onKeyDown={handleKeyPress} suffix={<ArrowRightOutlined  onClick={async ()=>{setIsEditable(false); await DlogService.updateDlog(item._id,logText);await refresh() }}/>} value={logText} onChange={(e)=>{setLogText(e.target.value)}} style={{ width: \"100%\" }} item={item} /> }\r\n\r\n            {!IsEditable && <span>{logText}</span>}\r\n        </List.Item>\r\n       )\r\n\r\n    }\r\n    return (\r\n        <div className=\"compStyle\">\r\n            <Input allowClear={true} style={{width:'90%'}} value={currLog} onChange={handleLogChange} placeholder=\"Add Log\" suffix={suffix} onKeyDown={handleKeyPress} />\r\n            <SyncOutlined spin={refreshSpin}  style={{ position:\"absolute\",right:\"3vh\" ,flaot: \"right\", fontSize: \"3vh\" }} onClick={refresh} />\r\n            <Divider orientation=\"left\" >Today's Dlogs </Divider>\r\n\r\n            \r\n            <List\r\n                bordered\r\n                \r\n                style={{ height: \"20vh\", maxHeight: \"20vh\", overflowY: 'scroll' }}\r\n                dataSource={currentDlogs}\r\n                renderItem={item => (\r\n                    <InputItem item={item}/>\r\n                    // <div>Hi</div>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddLog\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Select } from \"antd\";\r\nimport {\r\n  EnterOutlined,\r\n  ArrowRightOutlined,\r\n  SyncOutlined,\r\n  PoweroffOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { List, Typography, Divider } from \"antd\";\r\nimport { Input, Tooltip, Button } from \"antd\";\r\nimport axios from \"../../axios\";\r\nimport \"./Learnings.css\";\r\nimport { DlogService } from \"../../Services/dlog.service\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\n\r\nfunction Learnings(props) {\r\n  const getLogs = [];\r\n  const [currentDlogs, setCurrentDlogs] = useState([]);\r\n  const [refreshSpin, setRefreshSpin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCurrentDlogs(props.existingLearnings);\r\n  }, [props]);\r\n  const [currLog, setCurrLog] = useState(\"\");\r\n  const handleKeyPress = (target) => {\r\n    console.log(\"Key pressed\");\r\n    if (target.keyCode === 13) {\r\n      console.log(\"Enter detected\");\r\n      addLog();\r\n    }\r\n  };\r\n\r\n  const refresh = async () => {\r\n    setRefreshSpin(true);\r\n    const newDlogs = await DlogService.getLearnings();\r\n    setCurrentDlogs(newDlogs);\r\n    setRefreshSpin(false);\r\n  };\r\n  const addLog = async () => {\r\n    console.log(\"Adding\");\r\n    const item = await DlogService.addDLog(currLog);\r\n    setCurrentDlogs((currentDlogs) => [...currentDlogs, item]);\r\n    setCurrLog(\"\");\r\n  };\r\n\r\n  const handleLogChange = (e) => {\r\n    setCurrLog(e.target.value);\r\n  };\r\n  const handleRemove = async (id) => {\r\n    // console.log(id);\r\n    await DlogService.removeLearnings(id);\r\n    await refresh();\r\n  };\r\n  const suffix = (\r\n    <EnterOutlined\r\n      style={{\r\n        fontSize: 16,\r\n        color: \"#1890ff\",\r\n      }}\r\n    />\r\n  );\r\n  const InputItem = ({ item, refresh }) => {\r\n    const [modaledit, setmodaledit] = useState(false);\r\n\r\n    return (\r\n      <List.Item\r\n        actions={[\r\n          <div\r\n            style={{\r\n              color: \"blue\",\r\n              width: \"10%\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              setmodaledit(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </div>,\r\n          <div\r\n            onClick={() => {\r\n              handleRemove(item._id);\r\n            }}\r\n            style={{ color: \"red\", width: \"10%\", cursor: \"pointer\" }}\r\n          >\r\n            Remove\r\n          </div>,\r\n        ]}\r\n      >\r\n        <LearningLoader\r\n          setmodal={setmodaledit}\r\n          exists={true}\r\n          item={item}\r\n          refresh={refresh}\r\n          visible={modaledit}\r\n        />\r\n\r\n        {<span>{item.learning}</span>}\r\n      </List.Item>\r\n    );\r\n  };\r\n  const [modal, setmodal] = useState(false);\r\n  return (\r\n    <div className=\"compStyle\">\r\n      <Button\r\n        style={{ float: \"left\", marginBottom: \"3vh\" }}\r\n        type=\"primary\"\r\n        icon={<PlusOutlined />}\r\n        onClick={() => {\r\n          setmodal(true);\r\n        }}\r\n      >\r\n        Add Learning\r\n      </Button>\r\n      <LearningLoader\r\n        setmodal={setmodal}\r\n        refresh={refresh}\r\n        exists={false}\r\n        visible={modal}\r\n      />\r\n      <SyncOutlined\r\n        spin={refreshSpin}\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"3vh\",\r\n          flaot: \"right\",\r\n          fontSize: \"3vh\",\r\n        }}\r\n        onClick={refresh}\r\n      />\r\n      <Divider orientation=\"left\">Today's Learnings </Divider>\r\n\r\n      <List\r\n        bordered\r\n        style={{ height: \"20vh\", maxHeight: \"20vh\", overflowY: \"scroll\" }}\r\n        dataSource={currentDlogs}\r\n        renderItem={(item) => (\r\n          <InputItem item={item} refresh={refresh} />\r\n          // <div>Hi</div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LearningLoader(props) {\r\n  const [form] = Form.useForm();\r\n    if(props.exists){\r\n        form.setFieldsValue({\r\n            learning: props.item.learning,\r\n            from: props.item.from,\r\n            incident: props.item.incident,\r\n          });\r\n    }\r\n\r\n\r\n  const handleOk = async () => {\r\n    props.setmodal(false);\r\n    const addLearning = form.getFieldsValue([\"learning\", \"from\", \"incident\"]);\r\n    if (props.exists) {\r\n      await DlogService.updateLearnings(\r\n        props.item._id,\r\n        addLearning.learning,\r\n        addLearning.from,\r\n        addLearning.incident\r\n      );\r\n    }\r\n    else{\r\n    await DlogService.addLearnings(\r\n      addLearning.learning,\r\n      addLearning.from,\r\n      addLearning.incident\r\n    );\r\n    }\r\n    form.resetFields();\r\n\r\n    await props.refresh();\r\n  };\r\n\r\n  function handleCancel() {\r\n    props.setmodal(false);\r\n    form.resetFields();\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      learning: \"Be grateful for what you have\",\r\n      from: \"Future self\",\r\n      incident: \"Life\",\r\n    });\r\n  };\r\n  const layout = {\r\n    labelAlign: \"left\",\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n    colon: false,\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={props.exists? \"What do you want to update? 🤔\" :\"What did you learn today? 😃\"}\r\n      visible={props.visible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      okText={props.exists ? \"Update\" : \"Add\"}\r\n    >\r\n      <Form form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n        <Form.Item\r\n          {...layout}\r\n          name=\"learning\"\r\n          label=\"Learning\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...layout}\r\n          name=\"from\"\r\n          label=\"From\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...layout}\r\n          name=\"incident\"\r\n          label=\"Incident\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button htmlType=\"button\" onClick={onReset}>\r\n            Reset\r\n          </Button>\r\n          { !props.exists &&\r\n          <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n            Fill form\r\n          </Button>}\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Learnings;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nfunction Pomodoro() {\r\n  return (\r\n    <div>\r\n      Pomodoro component\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import React from 'react'\r\nimport './ViewLog.css'\r\nfunction ViewLog() {\r\n    return (\r\n        <div className=\"compStyle\">\r\n            ViewLog component\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewLog\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport axios from \"./axios\";\r\nimport AddLog from \"./Components/AddLog/AddLog\";\r\nimport Learnings from \"./Components/Learnings/Learnings\";\r\nimport Quote from \"inspirational-quotes\";\r\nimport Pomodoro from \"./Components/Pomodoro/Pomodoro\";\r\nimport ViewLog from \"./Components/VIewLog/ViewLog\";\r\nimport { Button, Card, Divider } from \"antd\";\r\nimport { Layout } from \"antd\";\r\nimport { Link, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Form, Input, Checkbox } from \"antd\";\r\nimport { DlogService, useAuth } from \"./Services/dlog.service\";\r\n\r\nimport { useForm } from \"antd/lib/form/Form\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst ENDPOINT = \"https://dlogservice.herokuapp.com/\";\r\n\r\nfunction DailyQuote() {\r\n  let temp = Quote.getQuote();\r\n  while (temp.text.length > 160) {\r\n    temp = Quote.getQuote();\r\n  }\r\n\r\n  let [quote, setQuote] = useState(temp.text);\r\n  let [quoteAuth, setQuoteAuth] = useState(temp.author);\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      let temp = Quote.getQuote();\r\n      while (temp.text.length > 160) {\r\n        temp = Quote.getQuote();\r\n      }\r\n      setQuote(temp.text);\r\n      setQuoteAuth(temp.author);\r\n    }, 5000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div style={{ float: \"right\", fontSize: \"2vh\" }}>\r\n      {quote} | {quoteAuth}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [logged] = useAuth();\r\n  console.log(\"It says:\"+logged)\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Header className=\"heading\">\r\n          <div>Daily Log Assistant </div>\r\n          <DailyQuote />\r\n        </Header>\r\n\r\n        <Switch>\r\n          {!logged && <>\r\n            <Route\r\n              path=\"/DlogAssistant\"\r\n              component={() => <LoginComp setLogin={() => console.log(true)} />}\r\n            />\r\n            <Redirect to=\"/DlogAssistant\"/>\r\n          </>}\r\n          {logged && <>\r\n            <Route\r\n              path=\"/DlogAssistant/dashboard\"\r\n              component={() => <LoggedInContent  />}\r\n            />\r\n            <Redirect to=\"/DlogAssistant/dashboard\"/>\r\n          </>}\r\n        </Switch>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Login(props) {\r\n  const [form] = useForm();\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const onFinish = async (values) => {\r\n    // console.table(form.getFieldsValue([\"username\",\"password\"]));\r\n\r\n    let res = await DlogService.confirmUser(\r\n      form.getFieldsValue([\"email\", \"password\"])\r\n    );\r\n    if (res.status == 200) {\r\n      props.setLogin();\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  // console.log(\"Login\");\r\n  return (\r\n    <Card title=\"Login Here!\" style={{ width: 500 }}>\r\n      <Form\r\n        {...layout}\r\n        form={form}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please input your username!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      Login <Link to=\"/DlogAssistant/dashboard\">here</Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Register() {\r\n  const [form] = useForm();\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const onFinish = async (values) => {\r\n    console.log(\"Success:\", values);\r\n    const res = await DlogService.registerUser(\r\n      form.getFieldsValue([\"name\", \"email\", \"password\"])\r\n    );\r\n\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  console.log(\"Login\");\r\n  return (\r\n    <Card title=\"Register Here!\" style={{ width: 500 }}>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        form={form}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"Please input your name!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please input your mail ID!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          rules={[\r\n            { required: true, message: \"Please re-enter your password!\" },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction LoginComp(props) {\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  return (\r\n    <Content className=\"loginstyle\">\r\n      <div className=\"center\">\r\n        <div className=\"centerButtons\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setIsLogin(true);\r\n            }}\r\n          >\r\n            Login\r\n          </Button>{\" \"}\r\n          <Divider type=\"vertical\" />{\" \"}\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setIsLogin(false);\r\n            }}\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {isLogin ? <Login setLogin={() => props.setLogin()} /> : <Register />}\r\n        </div>\r\n      </div>\r\n    </Content>\r\n  );\r\n}\r\n\r\nfunction LoggedInContent() {\r\n  const [response, setResponse] = useState(\"\");\r\n  let [res, setRes] = useState([]);\r\n  let [learnres, learnsetRes] = useState([]);\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(async () => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"FromAPI\", (data) => {\r\n      setResponse(data);\r\n    });\r\n    let data = await DlogService.getDlogs()\r\n    setRes(data);\r\n    data = await DlogService.getLearnings()\r\n    learnsetRes(data);\r\n    \r\n  }, []);\r\n  \r\n  return (\r\n    <Content className=\"App\">\r\n      <Card className=\"eachComp\">\r\n        <AddLog existingLogs={res} />\r\n      </Card>\r\n      <Card className=\"eachComp pomoStyle\">\r\n        <Pomodoro />\r\n      </Card>\r\n      <Card className=\"eachComp\">\r\n        <Learnings existingLearnings={learnres} />\r\n      </Card>\r\n      <Card className=\"eachComp\">\r\n        <ViewLog />\r\n      </Card>\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}