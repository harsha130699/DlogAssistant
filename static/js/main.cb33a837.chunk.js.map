{"version":3,"sources":["logo.svg","axios.js","Services/dlog.service.js","Components/AddLog/AddLog.js","Components/Learnings/Learnings.js","Components/Pomodoro/Pomodoro.js","Components/VIewLog/ViewLog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","DlogService","getDlogs","a","get","res","data","addDLog","task","post","item","removeDlog","id","delete","updateDlog","patch","getLearnings","addLearnings","learning","from","incident","removeLearnings","updateLearnings","getLearningsById","AddLog","props","useState","currentDlogs","setCurrentDlogs","refreshSpin","setRefreshSpin","useEffect","existingLogs","currLog","setCurrLog","refresh","newDlogs","addLog","console","log","handleRemove","suffix","EnterOutlined","style","fontSize","color","InputItem","IsEditable","setIsEditable","logText","setLogText","handleKeyPress","target","keyCode","_id","Item","actions","width","cursor","display","onClick","onKeyDown","ArrowRightOutlined","value","onChange","e","className","allowClear","placeholder","SyncOutlined","spin","position","right","flaot","orientation","bordered","height","maxHeight","overflowY","dataSource","renderItem","LearningLoader","Form","useForm","form","exists","setFieldsValue","handleOk","setmodal","addLearning","getFieldsValue","resetFields","layout","labelAlign","labelCol","span","wrapperCol","colon","title","visible","onOk","onCancel","okText","name","onFinish","values","label","rules","required","htmlType","type","Learnings","existingLearnings","modaledit","setmodaledit","modal","float","marginBottom","icon","PlusOutlined","Pomodoro","ViewLog","Header","Layout","Content","Footer","Sider","DailyQuote","temp","Quote","getQuote","text","length","quote","setQuote","author","quoteAuth","setQuoteAuth","timer","setInterval","clearInterval","App","setResponse","setRes","learnres","learnsetRes","socketIOClient","on","then","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb33a837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL: 'https://dlogservice.herokuapp.com/'\r\n});\r\nexport default instance;","import axios from \"../axios\";\r\n\r\nexport const DlogService = {\r\n  getDlogs: async () => {\r\n    const res = await axios.get(\"/dlogs\");\r\n    return res.data;\r\n  },\r\n  addDLog: async (task) => {\r\n    const item = await axios.post(\"/dlogs/addDlog\", { task: task });\r\n    return item.data;\r\n  },\r\n\r\n  removeDlog: async (id) => {\r\n    await axios.delete(\"/dlogs/\" + id);\r\n  },\r\n  updateDlog: async (id, task) => {\r\n    await axios.patch(\"/dlogs/\" + id, { task: task });\r\n  },\r\n\r\n  getLearnings: async () => {\r\n    const res = await axios.get(\"/learnings\");\r\n    return res.data;\r\n  },\r\n  addLearnings: async (learning, from, incident) => {\r\n    const item = await axios.post(\"/learnings/addLearning\", {\r\n      learning,\r\n      from,\r\n      incident,\r\n    });\r\n    return item.data;\r\n  },\r\n\r\n  removeLearnings: async (id) => {\r\n    await axios.delete(\"/learnings/\" + id);\r\n  },\r\n  updateLearnings: async (id, learning, from, incident) => {\r\n    await axios.patch(\"/learnings/\" + id, {\r\n      learning,\r\n      from,\r\n      incident,\r\n    });\r\n  },\r\n  getLearningsById: async (id)=>{\r\n   const res = await axios.get(\"/\"+id)\r\n   return res.data\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { EnterOutlined, ArrowRightOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { List, Typography, Divider } from 'antd';\r\nimport { Input, Tooltip, Button } from 'antd';\r\nimport axios from '../../axios';\r\nimport \"./AddLog.css\"\r\nimport { DlogService } from '../../Services/dlog.service'\r\nfunction AddLog(props) {\r\n    const getLogs = []\r\n    const [currentDlogs, setCurrentDlogs] = useState([])\r\n    const [refreshSpin, setRefreshSpin] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentDlogs(props.existingLogs)\r\n\r\n    }, [props])\r\n    const [currLog, setCurrLog] = useState(\"\")\r\n    const handleKeyPress = (target) => {\r\n        console.log(\"Key pressed\")\r\n        if (target.keyCode === 13) {\r\n            console.log(\"Enter detected\")\r\n            addLog()\r\n        }\r\n    }\r\n\r\n    const refresh = async () => {\r\n        setRefreshSpin(true)\r\n        const newDlogs = await DlogService.getDlogs()\r\n        setCurrentDlogs(newDlogs)\r\n        setRefreshSpin(false)\r\n    }\r\n    const addLog = async () => {\r\n        console.log(\"Adding\")\r\n        const item = await DlogService.addDLog(currLog)\r\n        setCurrentDlogs(currentDlogs => [...currentDlogs, item])\r\n        setCurrLog(\"\")\r\n\r\n    }\r\n\r\n    const handleLogChange = (e) => {\r\n        setCurrLog(e.target.value)\r\n\r\n    }\r\n    const handleRemove = async (id) => {\r\n        // console.log(id)\r\n        await DlogService.removeDlog(id)\r\n        await refresh()\r\n\r\n\r\n    }\r\n    const suffix = (\r\n        <EnterOutlined\r\n            style={{\r\n                fontSize: 16,\r\n                color: '#1890ff',\r\n            }}\r\n        />\r\n    );\r\n    const InputItem = ({item}) => {\r\n        const [IsEditable,setIsEditable] = useState(false)\r\n        const [logText,setLogText] = useState(item.task)\r\n        const handleKeyPress = async (target) => {\r\n            console.log(\"Key pressed\")\r\n            if (target.keyCode === 13) {\r\n                console.log(\"Enter detected\")\r\n                setIsEditable(false); \r\n                await DlogService.updateDlog(item._id,logText);\r\n                await refresh()\r\n            }\r\n        }\r\n       return ( <List.Item \r\n            actions={[<div style={{ color: 'blue',width:\"10%\" ,cursor:\"pointer\" , display: IsEditable ? 'none':'block' }} onClick={()=>{setIsEditable(true)}}>Edit</div>, <div onClick={() => { handleRemove(item._id) }} style={{ color: 'red', width:\"10%\" ,cursor: \"pointer\" }}>Remove</div>]}\r\n        >\r\n            {IsEditable && <Input onKeyDown={handleKeyPress} suffix={<ArrowRightOutlined  onClick={async ()=>{setIsEditable(false); await DlogService.updateDlog(item._id,logText);await refresh() }}/>} value={logText} onChange={(e)=>{setLogText(e.target.value)}} style={{ width: \"100%\" }} item={item} /> }\r\n\r\n            {!IsEditable && <span>{logText}</span>}\r\n        </List.Item>\r\n       )\r\n\r\n    }\r\n    return (\r\n        <div className=\"compStyle\">\r\n            <Input allowClear={true} style={{width:'90%'}} value={currLog} onChange={handleLogChange} placeholder=\"Add Log\" suffix={suffix} onKeyDown={handleKeyPress} />\r\n            <SyncOutlined spin={refreshSpin}  style={{ position:\"absolute\",right:\"3vh\" ,flaot: \"right\", fontSize: \"3vh\" }} onClick={refresh} />\r\n            <Divider orientation=\"left\" >Today's Dlogs </Divider>\r\n\r\n            \r\n            <List\r\n                bordered\r\n                \r\n                style={{ height: \"20vh\", maxHeight: \"20vh\", overflowY: 'scroll' }}\r\n                dataSource={currentDlogs}\r\n                renderItem={item => (\r\n                    <InputItem item={item}/>\r\n                    // <div>Hi</div>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddLog\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Select } from \"antd\";\r\nimport {\r\n  EnterOutlined,\r\n  ArrowRightOutlined,\r\n  SyncOutlined,\r\n  PoweroffOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { List, Typography, Divider } from \"antd\";\r\nimport { Input, Tooltip, Button } from \"antd\";\r\nimport axios from \"../../axios\";\r\nimport \"./Learnings.css\";\r\nimport { DlogService } from \"../../Services/dlog.service\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\n\r\nfunction Learnings(props) {\r\n  const getLogs = [];\r\n  const [currentDlogs, setCurrentDlogs] = useState([]);\r\n  const [refreshSpin, setRefreshSpin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCurrentDlogs(props.existingLearnings);\r\n  }, [props]);\r\n  const [currLog, setCurrLog] = useState(\"\");\r\n  const handleKeyPress = (target) => {\r\n    console.log(\"Key pressed\");\r\n    if (target.keyCode === 13) {\r\n      console.log(\"Enter detected\");\r\n      addLog();\r\n    }\r\n  };\r\n\r\n  const refresh = async () => {\r\n    setRefreshSpin(true);\r\n    const newDlogs = await DlogService.getLearnings();\r\n    setCurrentDlogs(newDlogs);\r\n    setRefreshSpin(false);\r\n  };\r\n  const addLog = async () => {\r\n    console.log(\"Adding\");\r\n    const item = await DlogService.addDLog(currLog);\r\n    setCurrentDlogs((currentDlogs) => [...currentDlogs, item]);\r\n    setCurrLog(\"\");\r\n  };\r\n\r\n  const handleLogChange = (e) => {\r\n    setCurrLog(e.target.value);\r\n  };\r\n  const handleRemove = async (id) => {\r\n    console.log(id);\r\n    await DlogService.removeLearnings(id);\r\n    await refresh();\r\n  };\r\n  const suffix = (\r\n    <EnterOutlined\r\n      style={{\r\n        fontSize: 16,\r\n        color: \"#1890ff\",\r\n      }}\r\n    />\r\n  );\r\n  const InputItem = ({ item, refresh }) => {\r\n    const [modaledit, setmodaledit] = useState(false);\r\n\r\n    return (\r\n      <List.Item\r\n        actions={[\r\n          <div\r\n            style={{\r\n              color: \"blue\",\r\n              width: \"10%\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              setmodaledit(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </div>,\r\n          <div\r\n            onClick={() => {\r\n              handleRemove(item._id);\r\n            }}\r\n            style={{ color: \"red\", width: \"10%\", cursor: \"pointer\" }}\r\n          >\r\n            Remove\r\n          </div>,\r\n        ]}\r\n      >\r\n        <LearningLoader\r\n          setmodal={setmodaledit}\r\n          exists={true}\r\n          item={item}\r\n          refresh={refresh}\r\n          visible={modaledit}\r\n        />\r\n\r\n        {<span>{item.learning}</span>}\r\n      </List.Item>\r\n    );\r\n  };\r\n  const [modal, setmodal] = useState(false);\r\n  return (\r\n    <div className=\"compStyle\">\r\n      <Button\r\n        style={{ float: \"left\", marginBottom: \"3vh\" }}\r\n        type=\"primary\"\r\n        icon={<PlusOutlined />}\r\n        onClick={() => {\r\n          setmodal(true);\r\n        }}\r\n      >\r\n        Add Learning\r\n      </Button>\r\n      <LearningLoader\r\n        setmodal={setmodal}\r\n        refresh={refresh}\r\n        exists={false}\r\n        visible={modal}\r\n      />\r\n      <SyncOutlined\r\n        spin={refreshSpin}\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"3vh\",\r\n          flaot: \"right\",\r\n          fontSize: \"3vh\",\r\n        }}\r\n        onClick={refresh}\r\n      />\r\n      <Divider orientation=\"left\">Today's Learnings </Divider>\r\n\r\n      <List\r\n        bordered\r\n        style={{ height: \"20vh\", maxHeight: \"20vh\", overflowY: \"scroll\" }}\r\n        dataSource={currentDlogs}\r\n        renderItem={(item) => (\r\n          <InputItem item={item} refresh={refresh} />\r\n          // <div>Hi</div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LearningLoader(props) {\r\n  const [form] = Form.useForm();\r\n    if(props.exists){\r\n        form.setFieldsValue({\r\n            learning: props.item.learning,\r\n            from: props.item.from,\r\n            incident: props.item.incident,\r\n          });\r\n    }\r\n\r\n\r\n  const handleOk = async () => {\r\n    props.setmodal(false);\r\n    const addLearning = form.getFieldsValue([\"learning\", \"from\", \"incident\"]);\r\n    if (props.exists) {\r\n      await DlogService.updateLearnings(\r\n        props.item._id,\r\n        addLearning.learning,\r\n        addLearning.from,\r\n        addLearning.incident\r\n      );\r\n    }\r\n    else{\r\n    await DlogService.addLearnings(\r\n      addLearning.learning,\r\n      addLearning.from,\r\n      addLearning.incident\r\n    );\r\n    }\r\n    form.resetFields();\r\n\r\n    await props.refresh();\r\n  };\r\n\r\n  function handleCancel() {\r\n    props.setmodal(false);\r\n    form.resetFields();\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      learning: \"Be grateful for what you have\",\r\n      from: \"Future self\",\r\n      incident: \"Life\",\r\n    });\r\n  };\r\n  const layout = {\r\n    labelAlign: \"left\",\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n    colon: false,\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={props.exists? \"What do you want to update? 🤔\" :\"What did you learn today? 😃\"}\r\n      visible={props.visible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      okText={props.exists ? \"Update\" : \"Add\"}\r\n    >\r\n      <Form form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n        <Form.Item\r\n          {...layout}\r\n          name=\"learning\"\r\n          label=\"Learning\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...layout}\r\n          name=\"from\"\r\n          label=\"From\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...layout}\r\n          name=\"incident\"\r\n          label=\"Incident\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button htmlType=\"button\" onClick={onReset}>\r\n            Reset\r\n          </Button>\r\n          { !props.exists &&\r\n          <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n            Fill form\r\n          </Button>}\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Learnings;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nfunction Pomodoro() {\r\n  return (\r\n    <div>\r\n      Pomodoro component\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import React from 'react'\r\nimport './ViewLog.css'\r\nfunction ViewLog() {\r\n    return (\r\n        <div className=\"compStyle\">\r\n            ViewLog component\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewLog\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from './axios';\r\nimport AddLog from './Components/AddLog/AddLog';\r\nimport Learnings from './Components/Learnings/Learnings';\r\nimport Quote from 'inspirational-quotes';\r\nimport Pomodoro from './Components/Pomodoro/Pomodoro';\r\nimport ViewLog from './Components/VIewLog/ViewLog';\r\nimport { Card } from 'antd';\r\nimport { Layout } from 'antd';\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst ENDPOINT = \"https://dlogservice.herokuapp.com/\";\r\n\r\nfunction DailyQuote() {\r\n  let temp = Quote.getQuote()\r\n  while(temp.text.length > 160){\r\n    temp=Quote.getQuote()\r\n  }\r\n\r\n  let [quote, setQuote] = useState(temp.text)\r\n  let [quoteAuth, setQuoteAuth] = useState(temp.author)\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const temp = Quote.getQuote()\r\n      while(temp.text.length > 160){\r\n        temp=Quote.getQuote()\r\n      }\r\n      setQuote(temp.text)\r\n      setQuoteAuth(temp.author)\r\n\r\n    }, 5000)\r\n    return () => { clearInterval(timer) }\r\n  }, [])\r\n  return (\r\n    <div style={{ float: 'right', fontSize: '2vh' }}>\r\n      {quote} | {quoteAuth}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const [response, setResponse] = useState(\"\");\r\n  let [res, setRes] = useState([])\r\n  let [learnres, learnsetRes] = useState([])\r\n  \r\n\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"FromAPI\", data => {\r\n      setResponse(data);\r\n    });\r\n    axios.get(`/dlogs`).then(data => {\r\n      setRes(data.data)\r\n    })\r\n    axios.get(`/learnings`).then(data => {\r\n      learnsetRes(data.data)\r\n    })\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Layout>\r\n        <Header className='heading'>\r\n          <div>\r\n            Daily Log Assistant\r\n          </div>\r\n        <DailyQuote/>\r\n        </Header>\r\n        <Content className=\"App\">\r\n          <Card className=\"eachComp\">\r\n            <AddLog existingLogs={res} />\r\n\r\n          </Card>\r\n          <Card className=\"eachComp pomoStyle\">\r\n            <Pomodoro />\r\n\r\n\r\n          </Card>\r\n          <Card className=\"eachComp\">\r\n          <Learnings existingLearnings={learnres} />\r\n\r\n          </Card>\r\n          <Card className=\"eachComp\">\r\n            <ViewLog />\r\n\r\n          </Card>\r\n        </Content>\r\n      </Layout>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}